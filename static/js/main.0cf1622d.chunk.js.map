{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","role","htmlFor","colorChange","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","email","setEmail","Fragment","style","color","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","preventDefault","toLowerCase","newemail","match","extractEmails","length","split","About","currstyle","setStyle","btnText","setBtnText","aria-labelledby","data-bs-parent","border","App","setMode","react_router_dom","colour","document","getElementById","body","react_router","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0cf1622d.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li> */}\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link>\r\n        </li> */}\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n      \r\n        <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='dark'?'Lightmode':'Darkmode'}</label>\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n  <div onClick={props.colorChange} className=\"colorPallets mx-3\">\r\n              <input type=\"color\" id=\"colorpicker\" />\r\n            </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"onchange fired\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleUpClick=(event)=>{\r\n        // console.log(\"onclick fired\")\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        event.preventDefault()\r\n    }\r\n\r\n    function extractEmails(text)\r\n        {\r\n            return text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\r\n        }\r\n\r\n    const handleEmailExtract=(event)=>{\r\n        // console.log(\"onclick fired\")\r\n        let newemail=extractEmails(text);\r\n        if(newemail.length===0)\r\n        {\r\n            setEmail('No E-mail found!')\r\n            event.preventDefault()\r\n        }\r\n        else{\r\n            setEmail(newemail)\r\n            event.preventDefault()\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n\r\n    const handleLowClick=(event)=>{\r\n        // console.log(\"onclick fired\")\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        event.preventDefault()\r\n    }\r\n\r\n    const [text,setText]=useState(\"Enter text here\")\r\n    const [email,setEmail]=useState(\"No email found!\")\r\n\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'grey'}}>\r\n        <h1>Enter your text below to analyze</h1>\r\n        <form>\r\n            <div className=\"mb-3 \">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'grey',color: props.mode==='dark'?'white':'grey'}} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n                <button className=\"btn btn-primary my-2 mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary my-2 mx-1\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary my-2 mx-1\" onClick={handleEmailExtract}>Extract emails</button>\r\n            </div>\r\n  \r\n        </form>\r\n      \r\n    </div>\r\n    <div className='container my-3' style={{color: props.mode==='dark'?'white':'grey'}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <h3>E-mails:-</h3>\r\n        <p>{email}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const toggleStyle=()=>{\r\n        if(currstyle.color=='white'){\r\n            setStyle({\r\n                color:'black',\r\n                backgroundColor:'white'\r\n            })\r\n            setBtnText('Enable Darkmode')\r\n        }\r\n        else{\r\n            setStyle({\r\n                color:'white',\r\n                backgroundColor:'black',\r\n                border:'1px solid white'\r\n            })\r\n            setBtnText('Enable Lightmode')\r\n        }\r\n    }\r\n\r\n    const [currstyle,setStyle]=useState({\r\n        color:'black',\r\n        backgroundColor:'white'\r\n    })\r\n\r\n    const [btnText,setBtnText]=useState('Enable Darkmode')\r\n\r\n  return (\r\n    <>\r\n    <div className='container my-3' style={currstyle}>\r\n        <h2>About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\" style={currstyle}>\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" style={currstyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                Accordion Item #1\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={currstyle}>\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" style={currstyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                Accordion Item #2\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={currstyle}>\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" style={currstyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                Accordion Item #3\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className='container'>\r\n        <button className='btn btn-primary' onClick={toggleStyle}>{btnText}</button>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React,{useState} from 'react'\nimport About from './components/About';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const colorChange = () => {\n    let colour = document.getElementById(\"colorpicker\").value;\n    document.body.style.backgroundColor = colour ;\n\n  };\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#343a40'\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n    }\n    \n  }\n\n  const[mode,setMode]=useState('light')\n\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtils\" colorChange={colorChange} mode={mode} togglemode={toggleMode} />\n    <div className=\"container my-3\">\n      {/* <TextForm mode={mode}/> */}\n      <Routes>\n      <Route path='/' element={<TextForm mode={mode} />} />\n      <Route path=\"about/*\" element={<About />} />\n      </Routes>\n      {/* <About/> */}\n    </div>\n    </Router>\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}